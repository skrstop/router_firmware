#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Respberry4B imoutowrt 22.03 self

on:
  workflow_dispatch:
#  schedule:
#    - cron: 0 18 * * *
  # watch:
  #   types: started

env:
  CONFIG_FILE: respberry4b/respberry4b.config
  SOURCE_URL: https://github.com/immortalwrt/immortalwrt.git
  SOURCE_BRANCH: master
  DIY_SH: respberry4b/scripts/custom.sh
  TOOLCHAIN_TAG: toolchain
  CLASH_BINARY_PLATFORM: armv8
  TOOLCHAIN_RELEASE_UPLOAD: true
  FIRMWARE_RELEASE_UPLOAD: true
  FEEDS_CONF: feeds.conf.default
  WEB_ROOT_PATH: /data/www/openwrt.cc
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-20.04-self

    outputs:
      OPENWRT_ROOT_PATH: ${{ steps.clone.outputs.OPENWRT_ROOT_PATH }}
      CURRENT_BRANCH: ${{ steps.env.outputs.CURRENT_BRANCH }}
      SOURCE_OWNER: ${{ steps.env.outputs.SOURCE_OWNER }}
      SOURCE_REPO: ${{ steps.env.outputs.SOURCE_REPO }}
      DEVICE_PLATFORM: ${{ steps.env.outputs.DEVICE_PLATFORM }}
      DEVICE_TARGET: ${{ steps.env.outputs.DEVICE_TARGET }}
      DEVICE_SUBTARGET: ${{ steps.env.outputs.DEVICE_SUBTARGET }}
      TOOLCHAIN_IMAGE: ${{ steps.env.outputs.TOOLCHAIN_IMAGE }}

    steps:       
      - name: Umount
        continue-on-error: true
        run: |
          sudo umount /dev/loop0
          sudo umount overlay
          
      - name: Clean Up
        run: |
          ls -alh
          pwd
          rm -rf $GITHUB_WORKSPACE/*
          rm -rf $GITHUB_WORKSPACE/.g*
          ls -alh
        
      - name: Check space usage
        if: (!cancelled())
        run: df -hT

#       - name: Maximize build space
#         uses: easimon/maximize-build-space@master
#         with:
#           root-reserve-mb: 10240
#           swap-size-mb: 1024
#           remove-dotnet: 'true'
#           remove-android: 'true'
#           remove-haskell: 'true'
#           remove-codeql: 'false'
#           remove-docker-images: 'true'

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install squashfs-tools build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          mkdir -p workspace

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Checkout
        uses: actions/checkout@main

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Clone Source Code
        id: clone
        run: |
          df -hT $PWD
          git clone $SOURCE_URL -b $SOURCE_BRANCH workspace/openwrt
          cd workspace/openwrt
          echo "OPENWRT_ROOT_PATH=$PWD" >> $GITHUB_ENV
          echo "OPENWRT_ROOT_PATH=$(echo $PWD)" >> $GITHUB_OUTPUT

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Generate Toolchain Config
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRT_ROOT_PATH/.config
          echo -e "\nCONFIG_ALL=y" >> $OPENWRT_ROOT_PATH/.config
          echo -e "\nCONFIG_ALL_NONSHARED=y" >> $OPENWRT_ROOT_PATH/.config
          cd $OPENWRT_ROOT_PATH
          make defconfig > /dev/null 2>&1

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Generate Variables
        id: env
        run: |
          export CURRENT_BRANCH="$(git symbolic-ref --short HEAD)"
          echo "CURRENT_BRANCH=$CURRENT_BRANCH" >> $GITHUB_ENV
          echo "CURRENT_BRANCH=$(echo $CURRENT_BRANCH)" >> $GITHUB_OUTPUT
          cd $OPENWRT_ROOT_PATH
          export SOURCE_OWNER="$(echo $SOURCE_URL | awk -F '/' '{print $(NF-1)}')"
          echo "SOURCE_OWNER=$SOURCE_OWNER" >> $GITHUB_ENV
          echo "SOURCE_OWNER=$(echo $SOURCE_OWNER)" >> $GITHUB_OUTPUT
          export SOURCE_REPO="$(echo $SOURCE_URL | awk -F '/' '{print $(NF)}')"
          echo "SOURCE_REPO=$SOURCE_REPO" >> $GITHUB_ENV
          echo "SOURCE_REPO=$(echo $SOURCE_REPO)" >> $GITHUB_OUTPUT
          export DEVICE_TARGET=$(cat .config | grep CONFIG_TARGET_BOARD | awk -F '"' '{print $2}')
          echo "DEVICE_TARGET=$DEVICE_TARGET" >> $GITHUB_ENV
          echo "DEVICE_TARGET=$(echo $DEVICE_TARGET)" >> $GITHUB_OUTPUT
          export DEVICE_SUBTARGET=$(cat .config | grep CONFIG_TARGET_SUBTARGET | awk -F '"' '{print $2}')
          echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV
          echo "DEVICE_SUBTARGET=$(echo $DEVICE_SUBTARGET)" >> $GITHUB_OUTPUT
          export DEVICE_PLATFORM=$(cat .config | grep CONFIG_TARGET_ARCH_PACKAGES | awk -F '"' '{print $2}')
          echo "DEVICE_PLATFORM=$DEVICE_PLATFORM" >> $GITHUB_ENV
          echo "DEVICE_PLATFORM=$(echo $DEVICE_PLATFORM)" >> $GITHUB_OUTPUT
          export TOOLCHAIN_IMAGE="toolchain-$SOURCE_OWNER-$SOURCE_REPO-$SOURCE_BRANCH-$DEVICE_TARGET-$DEVICE_SUBTARGET"
          echo "TOOLCHAIN_IMAGE=$TOOLCHAIN_IMAGE" >> $GITHUB_ENV
          echo "TOOLCHAIN_IMAGE=$(echo $TOOLCHAIN_IMAGE)" >> $GITHUB_OUTPUT

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Compare Toolchain Hash
        id: hash
        run: |
          cd $OPENWRT_ROOT_PATH
          export CURRENT_HASH=$(git log --pretty=tformat:"%H" -n1 tools toolchain)
          echo "CURRENT_HASH=$CURRENT_HASH" >> $GITHUB_ENV
          echo "CURRENT_HASH=$(echo $CURRENT_HASH)" >> $GITHUB_OUTPUT
          echo "CURRENT_HASH is $CURRENT_HASH"
          export CACHE_HASH=$(curl -fSsL https://github.com/$GITHUB_REPOSITORY/releases/download/$TOOLCHAIN_TAG/$TOOLCHAIN_IMAGE.hash)
          echo "CACHE_HASH is $CACHE_HASH"
          if [ -z "$CACHE_HASH" ] || [ "$CURRENT_HASH" != "$CACHE_HASH" ]; then
            echo "REBUILD_TOOLCHAIN=true" >> $GITHUB_OUTPUT
          fi

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

#      - name: Load custom feeds
#        run: |
#          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF cd $OPENWRT_ROOT_PATH/feeds.conf.default
#          chmod +x $GITHUB_WORKSPACE/respberry4b/scripts/feeds-add.sh
#          cd $OPENWRT_ROOT_PATH
#          $GITHUB_WORKSPACE/respberry4b/scripts/feeds-add.sh

      - name: Install Feeds
        if: steps.hash.outputs.REBUILD_TOOLCHAIN == 'true'
        run: |
          cd $OPENWRT_ROOT_PATH
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make defconfig

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Compile Tools
        if: steps.hash.outputs.REBUILD_TOOLCHAIN == 'true'
        run: |
          cd $OPENWRT_ROOT_PATH
          echo -e "$(nproc) thread compile"
          make tools/compile -j$(nproc) || make tools/compile -j1 V=s

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Compile Toolchain
        if: steps.hash.outputs.REBUILD_TOOLCHAIN == 'true'
        run: |
          cd $OPENWRT_ROOT_PATH
          echo -e "$(nproc) thread compile"
          make toolchain/compile -j$(nproc) || make toolchain/compile -j1 V=s
          rm -rf .config* dl bin

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Generate Toolchain Image
        if: steps.hash.outputs.REBUILD_TOOLCHAIN == 'true'
        run: |
          cd workspace
          mksquashfs openwrt $TOOLCHAIN_IMAGE -force-gid 1001 -force-uid 1001 -comp zstd
          mkdir -p $GITHUB_WORKSPACE/output
          split -d -b 1900M $TOOLCHAIN_IMAGE $GITHUB_WORKSPACE/output/$TOOLCHAIN_IMAGE.img.
          rm $TOOLCHAIN_IMAGE
          cd $OPENWRT_ROOT_PATH
          echo $CURRENT_HASH > $GITHUB_WORKSPACE/output/toolchain-$SOURCE_OWNER-$SOURCE_REPO-$SOURCE_BRANCH-$DEVICE_TARGET-$DEVICE_SUBTARGET.hash
          ls -lh $GITHUB_WORKSPACE/output

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Install Feeds
        run: |
          cd $OPENWRT_ROOT_PATH
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Load Custom Configuration
        run: |
          [ -e files ] && mv files $OPENWRT_ROOT_PATH/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRT_ROOT_PATH/.config
          cat respberry4b/general-packages.config >> $OPENWRT_ROOT_PATH/.config
          cat respberry4b/extra-drivers.config >> $OPENWRT_ROOT_PATH/.config
          cd $OPENWRT_ROOT_PATH
          echo -e "CONFIG_USB_LAN78XX=y\nCONFIG_USB_NET_DRIVERS=y" >> target/linux/bcm27xx/bcm2711/config-6.1
          sed -i 's/36/44/g;s/VHT80/VHT20/g' package/kernel/mac80211/files/lib/wifi/mac80211.sh
          chmod +x $GITHUB_WORKSPACE/respberry4b/scripts/*.sh
          $GITHUB_WORKSPACE/$DIY_SH
          $GITHUB_WORKSPACE/respberry4b/scripts/preset-clash-core.sh $CLASH_BINARY_PLATFORM
          $GITHUB_WORKSPACE/respberry4b/scripts/preset-terminal-tools.sh
          make defconfig

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Download DL Package
        id: download
        run: |
          cd $OPENWRT_ROOT_PATH
          make download -j64

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Compile Packages
        run: |
          cd $OPENWRT_ROOT_PATH
          echo -e "$(nproc) thread compile"
          make buildinfo
          make diffconfig buildversion feedsversion
          make target/compile -j$(nproc) IGNORE_ERRORS="m n" BUILD_LOG=1 || \
          yes n | make target/compile -j1 V=s IGNORE_ERRORS=1
          make package/compile -j$(nproc) IGNORE_ERRORS=1 || make package/compile -j1 V=s IGNORE_ERRORS=1
          make package/index

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Generate Firmware
        id: generate
        run: |
          if grep -q $DEVICE_TARGET/$DEVICE_SUBTARGET $GITHUB_WORKSPACE/respberry4b/data/support-targets.txt; then
            mkdir -p $OPENWRT_ROOT_PATH/files/etc/opkg
            cd $OPENWRT_ROOT_PATH/files/etc/opkg
            cp $GITHUB_WORKSPACE/respberry4b/data/opkg/distfeeds.conf .
            sed -i "s/DEVICE_SUBTARGET/$DEVICE_SUBTARGET/g" distfeeds.conf
            sed -i "s/DEVICE_TARGET/$DEVICE_TARGET/g" distfeeds.conf
            sed -i "s/DEVICE_PLATFORM/$DEVICE_PLATFORM/g" distfeeds.conf
            cd $OPENWRT_ROOT_PATH
            git clone https://git.openwrt.org/project/usign.git
            cd usign
            cmake .
            make
            sudo mv usign /bin
            mkdir -p $OPENWRT_ROOT_PATH/files/etc/opkg/keys
            cd $OPENWRT_ROOT_PATH/files/etc/opkg/keys
            wget -q https://openwrt.cc/keys/key-build.pub
            mv key-build.pub $(usign -F -p key-build.pub)
          fi
          cd $OPENWRT_ROOT_PATH
          echo "dtparam=i2c_arm=on,audio=on" >> target/linux/bcm27xx/image/config.txt
          mkdir -p files/etc/uci-defaults/
          cp $GITHUB_WORKSPACE/respberry4b/scripts/init-settings.sh files/etc/uci-defaults/99-init-settings
          mkdir -p files/www/snapshots
          cp -r bin/targets files/www/snapshots
          make package/install -j$(nproc) || make package/install -j1 V=s
          make target/install -j$(nproc) || make target/install -j1 V=s
          make json_overview_image_info
          make checksum

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Print Sha256sums
        run: |
          cd $OPENWRT_ROOT_PATH/bin/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET
          cat sha256sums

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Organize Files
        run: |
          export BUILD_DATE=$(date +"%Y.%m.%d-%H%M")
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          cd $OPENWRT_ROOT_PATH/bin/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET
          rm -rf packages
          df -hT $PWD

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Deploy Files To HostHatch Node
        env:
          HOST: "${{ secrets.REMOTE_USER }}@${{ secrets.HOSTHATCH_IP }}"
          SOURCE_TARGETS: "${{ env.OPENWRT_ROOT_PATH }}/bin/targets/${{ env.DEVICE_TARGET }}/${{ env.DEVICE_SUBTARGET }}/"
          DEST_TARGETS: "${{ env.WEB_ROOT_PATH }}/releases/targets/${{ env.DEVICE_TARGET }}/${{ env.DEVICE_SUBTARGET }}/"
          REMOTE_PRIVATEKEY: "${{ secrets.HOSTHATCH_PRIVATEKEY }}"
        if: env.REMOTE_PRIVATEKEY != null
        run: |
          mkdir -p ~/.ssh/
          install -m 600 /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.HOSTHATCH_PRIVATEKEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -q -t -i ~/.ssh/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $HOST \
          bash -c "'mkdir -p $WEB_ROOT_PATH/releases/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET'"
          rsync -chavP --delete -e 'ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no' $SOURCE_TARGETS $HOST:$DEST_TARGETS

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Deploy Files To Backblaze
        env:
          B2_APPLICATION_KEY: "${{ secrets.B2_APPLICATION_KEY }}"
          B2_APPLICATION_KEY_ID: "${{ secrets.B2_APPLICATION_KEY_ID }}"
          SOURCE_TARGETS: "${{ env.OPENWRT_ROOT_PATH }}/bin/targets/${{ env.DEVICE_TARGET }}/${{ env.DEVICE_SUBTARGET }}/"
          DEST_TARGETS: "b2://${{ secrets.B2_BUCKETNAME }}/releases/targets/${{ env.DEVICE_TARGET }}/${{ env.DEVICE_SUBTARGET }}/"
        if: env.B2_APPLICATION_KEY != null && env.B2_APPLICATION_KEY_ID != null
        run: |
          sudo wget -q -O /bin/b2 https://github.com/Backblaze/B2_Command_Line_Tool/releases/latest/download/b2-linux
          sudo chmod +x /bin/b2
          b2 authorize-account $B2_APPLICATION_KEY_ID $B2_APPLICATION_KEY
          b2 sync --noProgress --threads 32 --keepDays 7 --replaceNewer $SOURCE_TARGETS $DEST_TARGETS

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Delete Old Firmware Assets
        if: steps.hash.outputs.REBUILD_TOOLCHAIN == 'true'
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}
          fail-if-no-assets: false
          fail-if-no-release: false
          assets: "*"

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Deploy Files To Release
        uses: ncipollo/release-action@v1.12.0
        if: env.FIRMWARE_RELEASE_UPLOAD == 'true'
        with:
          name: respberry4b-imoutowrt-6.1-22.03-${{ env.BUILD_DATE }}
          allowUpdates: true
          replacesArtifacts: true
          tag: respberry4b-imoutowrt-6.1-22.03-${{ env.BUILD_DATE }}
          body: ${{ env.BUILD_DATE }}
          commit: ${{ env.CURRENT_BRANCH }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ${{ env.OPENWRT_ROOT_PATH }}/bin/targets/${{ env.DEVICE_TARGET }}/${{ env.DEVICE_SUBTARGET }}/*

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      
